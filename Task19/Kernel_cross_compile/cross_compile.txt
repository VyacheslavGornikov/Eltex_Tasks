0 make distclean - очищаем каталог от файлов предыдущей сборки

1 Ставим кросс-компилятор
1.1 sudo apt-cache search gcc | grep arm - отображает список доступных кросс-компиляторов под архитектуру arm
1.2 sudo apt install gcc-arm-linux-gnueabihf - устанавливаем последнюю доступную версию компилятора

2 Сборка arm-ядра
2.1 ARCH=arm make defconfig - сборка конфигурации на базе multi_v7_defconfig
2.2 ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- make -j4 zImage - собираем образ ядра

3 Запуск ядра
3.1 Копируем ядро arch/arm/boot/zImage в любую папку (можно создать папку arm_kernel в другом каталоге)
3.2 ARCH=arm make dtbs - собираем dtb файлы из всех dts файлов
3.3 Копируем vexpress-v2p-ca9.dtb в папку arm_kernel
3.4 sudo apt install qemu-system-arm - устанавливаем эмулятор qemu для arm-архитектуры
3.5 Идем в папку, куда копировали образ ядра в пункте 3.1 (arm_kernel)
3.6 QEMU_AUDIO_DRV=none qemu-system-arm -M vexpress-a9 -kernel zImage -dtb vexpress-v2p-ca9.dtb -append "console=ttyAMA0" -nographic - загрузка ядра vexpress-a9
3.7 Ядро дошло до kernel panic, теперь нужно собрать корневую файловую систему

